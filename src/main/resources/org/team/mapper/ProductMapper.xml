<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.team.mapper.ProductMapper">
	<select id="getList" resultType="org.team.domain.ProductVO">
		select *
		FROM product p1
		WHERE
		p1.product_id = (
		SELECT MIN(p2.product_id)
		FROM
		product p2
		WHERE
		p2.product_name = p1.product_name
		)
		and product_name
		like
		concat('%',
		#{cri.keyword}, '%')
		order by product_id desc
		limit
		#{cri.pageStart},
		#{cri.amount}

	</select>
	<select id="selectList" resultType="org.team.domain.ProductVO">
    <choose>
        <when test="vo.color_id == null or vo.color_id == '99' or vo.size_id == null or vo.size_id == '99'">
            SELECT
                p1.product_id, p1.category_id, p1.product_name, p1.price, p1.img,
                p1.quantity, p1.sell_count, p1.color_id, p1.size_id
            FROM
                product p1
            WHERE
                p1.category_id = (
                    SELECT code_name FROM code
                    WHERE code_id = 'category_id'
                    AND code_category = #{vo.category_id}
                )
                AND p1.product_id = (
                    SELECT MIN(p2.product_id)
                    FROM product p2
                    WHERE p2.product_name = p1.product_name
                )
                AND p1.price BETWEEN #{row} AND #{high}
                AND p1.product_name LIKE CONCAT('%', #{cri.keyword}, '%')
        </when>
        <otherwise>
            SELECT
                p1.product_id, p1.category_id, p1.product_name, p1.price, p1.img,
                p1.quantity, p1.sell_count, p1.color_id, p1.size_id
            FROM
                product p1
            WHERE
                p1.category_id = (
                    SELECT code_name
                    FROM code
                    WHERE code_id = 'category_id'
                    AND code_category = #{vo.category_id}
                )
                AND p1.color_id = (
                    SELECT code_name
                    FROM code
                    WHERE code_id = 'color_id'
                    AND code_category = #{vo.color_id}
                )
                AND p1.size_id = (
                    SELECT code_name
                    FROM code
                    WHERE code_id = 'size_id'
                    AND code_category = #{vo.size_id}
                )
                AND p1.product_id = (
                    SELECT MIN(product_id)
                    FROM product p2
                    WHERE p2.product_name = p1.product_name
                )
                AND p1.price BETWEEN #{row} AND #{high}
                AND p1.product_name LIKE CONCAT('%', #{cri.keyword}, '%')
        </otherwise>
    </choose>

    <if test="sort == 'ASC'">
        ORDER BY p1.price ASC
    </if>
    <if test="sort == 'DESC'">
        ORDER BY p1.price DESC
    </if>
    LIMIT #{cri.pageStart}, #{cri.amount}
	</select>
	<select id="getTotal" resultType="int">
		 select count(*) from product p1 WHERE
		p1.product_id = (
		SELECT MIN(p2.product_id)
		FROM
		product p2
		WHERE
		p2.product_name = p1.product_name
		)
	</select>
	<select id="selectTotal" resultType="int">
		<![CDATA[	select count(*) from product
		where category_id = ( select code_name
		from code
		where code_id = "category_id"
		and code_category = #{vo.category_id})
		and color_id = (select code_name
		from code
		where code_id="color_id"
		and code_category = #{vo.color_id})
		and size_id = (select code_name
		from code
		where code_id="size_id"
		and code_category = #{vo.size_id})
		and price between #{row} and #{high}
		order by
		]]>
		<choose>
			<when test="sort == 'ASC'">price ASC</when>
			<when test="sort == 'DESC'">price DESC</when>
			<otherwise>price ASC</otherwise>
		</choose>
		limit #{cri.pageStart}, #{cri.amount}
	</select>

	<select id="detail" resultType="org.team.domain.ProductVO">
		select * from product where
		product_id = #{id}
	</select>

	<insert id="postWish">
	insert into wish(member_id, product_id, `count`)
		select
		#{mVo},
		(select product_id
		from product
		where color_id =
		#{aVo.product.color_id}
		and size_id = #{aVo.product.size_id}
		and
		product_name = #{aVo.product.product_name}) as product_id,
		#{aVo.count}
		from dual
		on duplicate key update
		`count` = `count` +
		#{aVo.count}
			</insert>
	<delete id="deleteWish">
		delete from wish where product_id = #{pVo.product_id}
		and member_id = #{mVo}
	</delete>
	<select id="countWish" resultType="int">
		SELECT COUNT(*) > 0 AS
		exists_in_wishlist
		FROM wish
		WHERE product_id = #{product_id} AND
		member_id = #{member_id}
	</select>

	<insert id="postCart">
		insert into cart(member_id, product_id, `count`)
		select
		#{mVo},
		(select product_id
		from product
		where color_id =
		#{aVo.product.color_id}
		and size_id = #{aVo.product.size_id}
		and
		product_name = #{aVo.product.product_name}) as product_id,
		#{aVo.count}
		from dual
		on duplicate key update
		`count` = `count` +
		#{aVo.count}
	</insert>
	
	<select id="sizeTotal" resultType="java.lang.String">
		select DISTINCT size_id from product where product_name = #{pVo.product_name} 
	</select>
	
	<select id="colorTotal" resultType="java.lang.String">
		select DISTINCT color_id from product where product_name = #{pVo.product_name}
	</select>

</mapper>